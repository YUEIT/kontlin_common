apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion rootProject.ext.android.targetSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
            generateStubs = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        main.proto.srcDirs +='src/main/proto'
    }
    dataBinding {
        enabled true
    }
    buildFeatures {
        viewBinding true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1' // 也可以配置本地编译器路径
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}// 生产java源码
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.androidx["core"]
    api rootProject.ext.androidx["core-ktx"]
    api rootProject.ext.androidx["multidex"]
    api rootProject.ext.androidx["lifecycle-viewmodel"]
    api rootProject.ext.androidx["lifecycle-runtime-ktx"]
    api rootProject.ext.androidx["lifecycle-viewmodel-ktx"]
    api rootProject.ext.androidx["lifecycle-livedata"]
    api rootProject.ext.androidx["lifecycle-viewmodel-savestate"]
    kapt rootProject.ext.androidx["lifecycle-compiler"]

    api rootProject.ext.androidx["appcompat"]
    api rootProject.ext.androidx["gridlayout"]
    api rootProject.ext.androidx["recyclerview"]
    api rootProject.ext.androidx["cardview"]
    api rootProject.ext.androidx["viewpager2"]
    api rootProject.ext.androidx["design"]
    api rootProject.ext.androidx["constraintlayout"]
    api rootProject.ext.androidx["coordinatorlayout"]
    api rootProject.ext.androidx["lifecycle-common"]
    api rootProject.ext.androidx["collection"]
    api rootProject.ext.androidx["collection-ktx"]
    api rootProject.ext.androidx["swiperefreshlayout"]

    api rootProject.ext.kotlin["stdlib"]
    api rootProject.ext.kotlin["coroutine"]
    api rootProject.ext.kotlin["coroutine-android"]
    api rootProject.ext.kotlin["reflect"]
    implementation rootProject.ext.dependencies["systembartint"]
    implementation rootProject.ext.dependencies["glide"]

    api rootProject.ext.dependencies["gson"]
    //aRouter
    api rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

    api rootProject.ext.dependencies["autosize"]
    api rootProject.ext.dependencies["mmkv"]

    api rootProject.ext.dependencies["exoplayer"]
    api rootProject.ext.androidx["work"]
    //Rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    //okhttp
    api rootProject.ext.dependencies["okhttp"]
    api rootProject.ext.dependencies["okhttp-log"]
    //Retrofit
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava"]

    api rootProject.ext.refresh["smart-refresh"]
    api rootProject.ext.refresh["header-classics"]

    api rootProject.ext.dependencies["vlayout"]

    api rootProject.ext.dependencies["wechat"]
    api 'com.google.protobuf:protobuf-java:3.6.1'
}
